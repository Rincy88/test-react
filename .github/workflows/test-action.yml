name: Combine SBOMs and Upload to Dependency Track.

on:
  push: 

jobs:
  combine-sboms:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Generate SBOM
        run: |
          export FETCH_LICENSE=true
          npm install -g @cyclonedx/cdxgen@8.6.0 && cdxgen -r -o bom.json| jq '.'
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          # Artifact name
          name: Generated sbom
          path: ./bom.json
      
      - name: Get SBOM using Project UUID
        run: |  
          API_ENDPOINT="https://dt-api.staging.cryptosoft.com/api/v1/project/lookup"
          API_KEY="1DMIXAnGtTIeTQDddlHSvpj6d3as174S"
          PROJECT_NAME="test3"
          PROJECT_VERSION="1.0.0"  

          response=$(curl -k -X GET  -H "X-Api-Key: $API_KEY" "$API_ENDPOINT?name=$PROJECT_NAME&version=$PROJECT_VERSION")
          
          if echo "$response" | jq -e '.uuid' > /dev/null; then 
          uuid=$(echo "$response" | jq -r '.uuid')
          echo "UUID: $uuid" 
          # API request to retrieve the existing SBOM
          curl -k -X GET -H "X-Api-Key: $API_KEY" "https://dt-api.staging.cryptosoft.com/api/v1/bom/cyclonedx/project/${uuid}?format=json&variant=withVulnerabilities&download=true" > existing_sbom.json| jq '.'
          else
              uuid=""
               echo '{}' > existing_sbom.json
               echo "UUID: $uuid" 
          fi 
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          # Artifact name
          name: Existing sbom
          path: ./existing_sbom.json
          
      - name: Combine SBOMs
        run: |
            jq -s 'def deepmerge(a;b):
             reduce b[] as $item (a;
                reduce ($item | keys_unsorted[]) as $key (.;
                  $item[$key] as $val | ($val | type) as $type | .[$key] = if ($type == "object") then
                    deepmerge({}; [if .[$key] == null then {} else .[$key] end, $val])
                  elif ($type == "array") then
                   (.[$key] + $val | unique)
                  else
                    $val
                  end)
                );
            deepmerge({}; .)' bom.json existing_sbom.json > aggregated_sbom.json
                  
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          # Artifact name
          name: combined sbom
          path: ./aggregated_sbom.json


      - name: Upload aggregated SBOM to Dependency Track
        run: | 
          # Read the combined JSON content from the file
          encoded_sbom=$(jq -c . aggregated_sbom.json | base64 | tr -d '\n')
          payloadfile=$(mktemp)
          
          PROJECT_NAME="test3"
          PROJECT_VERSION="1.0.0"
          
            if [[ -z "$uuid" ]]; then 
              cat << EOF > "$payloadfile"
          {
            "projectName": "${PROJECT_NAME}",
            "projectVersion": "${PROJECT_VERSION}",
            "autoCreate":true,
            "bom": "$encoded_sbom"
          }
          EOF
            else
              cat << EOF > "$payloadfile"
          {
            "project": "${uuid}",
            "autoCreate":true,
            "bom": "$encoded_sbom"
          }
          EOF
            fi 
          
          # API request to upload the aggregated SBOM to Dependency Track
          curl -k -X PUT "https://dt-api.staging.cryptosoft.com/api/v1/bom" \
            -H "Content-Type: application/json" \
            -H "X-Api-Key: 1DMIXAnGtTIeTQDddlHSvpj6d3as174S" \
            -d @"$payloadfile"

      - name: Cleanup
        run: |
          rm "bom.json" "existing_sbom.json" "aggregated_sbom.json"

